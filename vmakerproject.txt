#vmakerProject
#testing app

using UnityEngine;
using Systm.Collections;
public class VideoPlaybackController : MonoBehaviour
{ 
   private Vector2 mTouchStartpos;
   private bool mTouchMoved = false;
   private float mTimeElapsed = 0.0f;
   private bool mTapped = true;
   private float mTimeElapsedSinceTap = 0.0f;
   private boolmWentToFullScreen = false;
   
   void Update ()
   {
      if (Input.touchCount > 0)
      {
          Touch touch = Input.touches [0];
          if (touch.phase == TouchPhase.Began)
          {
            mTouchStartPos = touch.position;
            mTouchMoved = false;
            mTimeElapsed = 0.0f;
          }
          else
          {
            mTimeElapsed += Time.deltaTime;
          }
          if (touch.phase == TouchPhase.Moved)
          {
            if (Vector2.Distance(mTouchStartPos, touch.position) > 50)
             {
               mTouchMoved = true;
             }
          }
          else if (touch.phase == TouchPhase.Ended)
          {
             if (!mTouchMoved && mTimeElapsed < 1.0)
             {
               if (mTapped)
               {
                 HandleDoubleTap();
                 mTapped = false;
               }
               else
               {
                 mTapped = true;
                 mTimeElapsedSinceTap = 0.0f;
               }
             }
          }
      }
      if (mTapped)
      {
          if (mTimeElapsedSinceTap >= 0.5f)
          {
            HandleTap();
            mTapped = false;
          }
          else
          {
            mTimeElapsedSinceTap += Time.deltaTime;
          }
      }
      
      if (VufuriaRuntimeUtilities.IsPlayMode())
      {
          if(input.GetMounseButtonUp(0))
          {
            if (PickVideo(Input.mousePosition) != null)
            Debug.LogWarning ("Playing videos is currently not supported in Play Mode.");
          }
       }
   }
      
   #endregion
   #region Private_Methods
   private void HandleTap()
   {
      VideoPlaybackBehaviour video = PickVideo(mTouchStartPos);
      if (video != null)
      {
         if (video.VideoPlayer.IsPlayableOnTexture())
         VideoPlayerHelper.MediaState state = video.VideoPlayer.GetStatus();
         if (state == VideoPlayerHelper.MediaState.PAUSED ||
         state == VideoPlayerHelper.MediaState.READY ||
         state == VideoPlayerHelper.MediaState.STOPPED)
         {
            PauseOtherVideos(video);
         }
         else if (state == VideoPlayerHelper.MediaState.REACHED_END)
         {
            PauseOtherVideos(video);
            video.VideoPlayer.Play(false, 0);
         }
      }
      else
      {
         video.ShowBusyIcon();
         video.VideoPlayer.Play(true, 0);
         mWentToFullScreen = true;
      }
    }
  }
  
   private void HandleDouble Tap()
   { 
      VideoPlaybackBehaviour video = PickVideo(mTouchStartPos);
      if (video != null)
      {
         if (video.VideoPlayer.IsPlayableFullscreen())
         {
            video.VideoPlayer.Pause();
            video.VideoPlayer.SeekTo(0.0f);
            video.ShowBusyIcon();
            video.VideoPlayer.Play(true, 0);
            mWentToFullScreen = true;
         }
      }
   }
   private VideoPlaybackBehaviour PickVideo(Vector3 screenPoint)
   {
      VideoPlaybackBehaviour[] videos = (VideoPlaybackBehaviour[])
      FindObjectsOfType(typeof(VideoPlaybackBehaviour));
      Ray ray = Camera.main.ScreenPointToRay(screenPoint);
      RaycastHit hit = new RaycastHit();
      foreach (VideoPlaybackBehaviour video in videos)
      {
         if (video.collider.Raycast(ray, out hit, 10000))
         {
            return video;
         }
      }
      return null;
   }
 
   private void PauseOtherVideos(VideoPlaybackBehaviour currentVideo)
   {
      VideoPlaybackBehaviour[] videos = (VideoPlaybackBehaviour[])
      FindObjectsOfType(typeof(VideoPlaybackBehaviour));
      foreach (VideoPlaybackBehaviour video in videos)
      {
         if (video != currentVideo)
         {
           if (video.CurrentState == VideoPlayerHelper.MediaState.PLAYING)
           {
           video.VideoPlayer.Pause();
           }
         }
      }
   }
#endregion 
#region PUBLIC_METHODS
   
   public bool CheckWentToFullScreen()
   {
      bool result = mWentToFullScreen;
      mWentToFullScreen = false;
      return result;
   }
#endregion 
}
